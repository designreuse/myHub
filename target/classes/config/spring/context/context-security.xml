<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- ============================================================================================ -->
    <!-- Enables the Spring MVC @Controller programming model -->
    <!-- ============================================================================================ -->
    <mvc:annotation-driven />
    
    <!-- ============================================================================================ -->
    <!-- annotation config -->
    <!-- ============================================================================================ -->
    <context:annotation-config />
    
    <!-- ============================================================================================ -->
    <!-- default servlet --> 
    <!-- ============================================================================================ -->
    <mvc:default-servlet-handler />

    <!-- ============================================================================================ -->
    <!-- Login failuerEvent  --> 
    <!-- ============================================================================================ -->
    <beans:bean id="authenticationFailureEventHandler"
        class="kr.co.myhub.app.common.login.controller.AuthenticationFailureEventHandler" />
    
    <!-- ============================================================================================ -->
    <!-- channel  --> 
    <!-- ============================================================================================ -->
    <beans:bean class="org.springframework.security.web.access.channel.ChannelDecisionManagerImpl">
        <beans:property name="channelProcessors">
            <beans:list>
                <beans:ref bean="secureChannelProcessor"/>
                <beans:ref bean="insecureChannelProcessor"/>
            </beans:list>
        </beans:property>
    </beans:bean>
    <beans:bean id="secureChannelProcessor" class="org.springframework.security.web.access.channel.SecureChannelProcessor"/>
    <beans:bean id="insecureChannelProcessor" class="org.springframework.security.web.access.channel.InsecureChannelProcessor"/>
   
    <!-- ============================================================================================ -->
    <!-- 보안  HTTP url 인증처리  -->
    <!-- ============================================================================================ -->
    <security:http use-expressions="true" auto-config="true"
        access-denied-page="/accessDenied"
        disable-url-rewriting="true">
        
        <!-- Authorization(권한정보) -->
        <security:intercept-url pattern="/login" access="permitAll" />
        <security:intercept-url pattern="/user/**" access="permitAll" />
        
        <!-- Login -->        
        <security:form-login
            username-parameter="email"
            password-parameter="password"
            login-processing-url="/j_spring_security_check"
            login-page="/login"
            default-target-url="/loginSuccess"
            authentication-failure-url="/loginFailed"
        />
        
        <!-- Logout -->
        <security:logout
            invalidate-session="true"
            logout-url="/j_spring_security_logout"
            logout-success-url="/login"
        />

        <security:session-management
            session-fixation-protection="none"
            invalid-session-url="/login" >
            
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
            
        </security:session-management>

        <security:port-mappings>
            <security:port-mapping http="80" https="443" />
            <security:port-mapping http="8080" https="8443" />
        </security:port-mappings>
    </security:http>
    
    <!-- ============================================================================================ -->
    <!-- 인증 DB쿼리 인증 , 추가적으로 인메모리 인증, properties 사용한 인증이 있으나 잘 사용하지 않음 --> 
    <!-- ============================================================================================ -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder hash="sha-256"></security:password-encoder>
            
            <!-- 인메모리 인증
            <security:user-service>
                <security:user name="kbtapjm" password="92c7d71b95dc6540fc58e891dbe649fe72ae5e93b5f42fd7fbdeefe6cef3e51d" authorities="kbtapjm"/>
            </security:user-service>
             -->
            
            <security:jdbc-user-service
                id="userDetailsService"
                data-source-ref="dataSource"
                users-by-username-query="select email, password, '1' as enabled from user where email = ?"
                authorities-by-username-query="select email, case when priv = 0 then 'ROLE_ADMIN' when priv = 1 then 'ROLE_MANAGER' when priv = 2 then 'ROLE_USER' end as authority 
                                                from userauth
                                                where email = ?"
            />
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- ============================================================================================ -->
    <!-- Bean scan  -->
    <!-- ============================================================================================ -->
    <context:component-scan base-package="kr.co.myhub" />

</beans:beans>